{
  "swagger": "2.0",
  "info": {
    "title": "CareLinc Backend API",
    "description": "Outlines the different endpoints contained in the CareLinc Back-End API. These API Endpoints handle the management of accounts, appointment bookings, inventory management and other operations that are crucial to the functioning of the CareLinc platform.",
    "version": "1.0.0"
  },
  "host": "localhost:3000/api",
  "basePath": "/",
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints related to authentication and authorisation operations (login, create account, etc)"
    },
    {
      "name": "Admin",
      "description": "Endpoints related to admin operations"
    },
    {
      "name": "Patient",
      "description": "Endpoints related to patient operations"
    },
    {
      "name": "Company",
      "description": "Endpoints related to company operations"
    },
    {
      "name": "Doctor",
      "description": "Endpoints related to doctor operations"
    },
    {
      "name": "Pay-it-Forward",
      "description": "Endpoints related to the Pay-it-Forward program, allowing patients, doctors and companies to manage requests for help"
    },
    {
      "name": "Inventory",
      "description": "Endpoints related to drug inventory management"
    },
    {
      "name": "Appointments",
      "description": "Endpoints related to appointment scheduling and availability"
    },
    {
      "name": "Notifications",
      "description": "Endpoints related to notifications"
    },
    {
      "name": "Chatbot",
      "description": "Endpoints related to chatbot operations, allowing patients to interact with the chatbot"
    },
    {
      "name": "Mail",
      "description": "Endpoints related to mail operations which sends patients a payment confirmation email"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format **Bearer &lt;token&gt;**"
    }
  },
  "paths": {
    "/api/auth/login": {
      "post": {
        "description": "This route allows the login of a user, by verifying their email and password. It will return a Role (Admin, Patient, Doctor, Company) and a JWT Token in Cookies to be used in future authentication. If they are a patient, their approval status will be shown too.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/patient/{patientId}": {
      "get": {
        "description": "This route retrieves information related to the patient including their Known Allergies, Approval Status, Account Creation Date, Birthdate, Email and Name. Patients can only retrieve information about themselves.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      },
      "put": {
        "description": "This route allows Patients to update their own profile information. They can update their Name, Email, Known Allergies, Birthdate and Password. Patients can only update their own information.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "knownAllergies": {
                  "example": "any"
                },
                "birthdate": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      },
      "delete": {
        "description": "This route allows deletes a Patient Account and all associated information (Appointments, Payment Methods, etc). This operation is irreversible, and only accessible to the Patient themselves.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      }
    },
    "/api/patient/admin/{patientId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Admin"
        ]
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/patients/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      }
    },
    "/api/patient": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "knownAllergies": {
                  "example": "any"
                },
                "birthdate": {
                  "example": "any"
                },
                "qns": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      }
    },
    "/api/patient/approve/{patientId}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/patient/reject/{patientId}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/patient/paymentMethods/{patientId}": {
      "get": {
        "description": "This route retrieves all payment methods associated with a Patient ID. Payment Methods are returned in an array and only accessible to the Patient themselves.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      }
    },
    "/api/patient/paymentMethod/{patientId}": {
      "post": {
        "description": "This route allows the addition of a payment method that ties to a Patient ID. Patients can only add payment methods to their own account.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "merchant": {
                  "example": "any"
                },
                "cardName": {
                  "example": "any"
                },
                "cardNumber": {
                  "example": "any"
                },
                "cardExpiryDate": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      }
    },
    "/api/patient/paymentMethod/{methodId}": {
      "get": {
        "description": "This route retrieves a specific payment method associated with a Payment Method ID. Authentication is used to ensure that the requested payment method belongs to the Patient who is requesting it.",
        "parameters": [
          {
            "name": "methodId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      },
      "delete": {
        "description": "This route deletes a payment method with the associated Payment Method ID. Only the Patient who owns the payment method can delete it.",
        "parameters": [
          {
            "name": "methodId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      },
      "put": {
        "description": "This route updates a payment method with the associated Payment Method ID. Only the Patient who owns the payment method can update it.",
        "parameters": [
          {
            "name": "methodId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "merchant": {
                  "example": "any"
                },
                "cardName": {
                  "example": "any"
                },
                "cardNumber": {
                  "example": "any"
                },
                "cardExpiryDate": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      }
    },
    "/api/patient/{patientId}/digitalWallet": {
      "get": {
        "description": "This route retrieves the digital wallet of a patient. When a Patient account is first created, there is no Digital Wallet associated with their account. Patients can only retrieve their own digital wallet.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      },
      "post": {
        "description": "This route creates a empty (no value) digital wallet for a patient. Patients can only create a digital wallet for themselves.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "balance": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      },
      "delete": {
        "description": "This route deletes the associated digital wallet of a patient. When deleting a digital wallet, all funds and wallet history is lost. Patients can only delete their own digital wallet.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      },
      "put": {
        "description": "This route updates the amount in the patient's digital wallet. The updateAmount attribute specifies the amount to be added or subtracted from the wallet. Patients can only update their own digital wallet.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "updateAmount": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      }
    },
    "/api/patient/{patientId}/digitalWalletHistory": {
      "get": {
        "description": "This route retrieves the transaction history of a patient's digital wallet. The transaction history is returned in an array and only accessible to the Patient themselves. If the patient does not have an associated digital wallet, there would be no transaction history.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      },
      "post": {
        "description": "This route adds a new transaction to the patient's digital wallet history.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "amount": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      },
      "delete": {
        "description": "This route deletes all associated transaction history of a patient's digital wallet. Deleting the transaction history will remove all records of transactions made by the patient, but does not delete the patient's digital wallet.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      }
    },
    "/api/patient/makePayment": {
      "post": {
        "description": "This route marks the payment of an appointment as Paid. Patients can only mark their own appointments as Paid.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "appointmentId": {
                  "example": "any"
                },
                "paymentType": {
                  "example": "DWallet | Card | PayRequest"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      }
    },
    "/api/mail/paymentConfirmation": {
      "post": {
        "description": "This route sends a payment confirmation email to the patient. The email contains details of the payment made by the patient. To send a payment confirmation email for a Digital Wallet payment, the Merchant should be set to 'Digital Wallet'.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "recepient": {
                  "example": "any"
                },
                "paymentAmount": {
                  "example": "any"
                },
                "cardMerchant": {
                  "example": "any | Digital Wallet"
                },
                "cardLFDigits": {
                  "example": "any"
                },
                "appointmentDate": {
                  "example": "any"
                },
                "appointmentTime": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Mail"
        ]
      }
    },
    "/api/chatbot/sendMessage": {
      "post": {
        "description": "This route sends a message to the chatbot. The chatbot will respond with a message based on the input. This route also accepts the entry of a Chat History, which is retrieved using the /chatbot/history route. This route does not handle the saving of chat history.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "example": "any"
                },
                "history": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Chatbot"
        ]
      }
    },
    "/api/chatbot/history/{patientId}": {
      "get": {
        "description": "This route returns the chatbot history relating to a patient. The chatbot history is returned in a way that can be easily passed back into the Gemini Model. Only patients can retrieve their own chatbot history.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Chatbot"
        ]
      },
      "post": {
        "description": "This route adds a new chatbot history entry to the patient's chatbot history. Patients can only add chatbot history to their own account.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "history": {
                  "example": "any"
                },
                "historyTimestamps": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Chatbot"
        ]
      },
      "delete": {
        "description": "This route deletes all chatbot history associated with a patient using the Patient Id. Deleting the chatbot history will remove all records of chatbot interactions made by the patient.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Chatbot"
        ]
      }
    },
    "/api/patients/unapproved": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/staff/patient/{patientId}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "knownAllergies": {
                  "example": "any"
                },
                "birthdate": {
                  "example": "any"
                },
                "creationDate": {
                  "example": "any"
                },
                "isApproved": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/doctors/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Doctor"
        ]
      }
    },
    "/api/doctors/{doctorId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Doctor"
        ]
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "creationDate": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Doctor"
        ]
      }
    },
    "/api/questionnaire/{accountId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Patient"
        ]
      }
    },
    "/api/appointments/patient/{patientId}": {
      "get": {
        "description": "This route retrieves all appointments associated with a Patient ID. Appointments are returned in an array and only accessible to the Patient themselves. The returned appointments are not as detailed as the ones retrieved from the /appointments/{appointmentId} route.",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Appointments"
        ]
      }
    },
    "/api/appointments/doctor/{doctorId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Appointments"
        ]
      }
    },
    "/api/appointments/{appointmentId}": {
      "get": {
        "description": "This route retrieves a detailed description of an appointment by an Appointment ID. It combines the Payment, Payment Request, Prescribed Medication and Slot Times.",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Appointments"
        ]
      },
      "put": {
        "description": "This route allows the updating of an appointment by an Appointment ID. The body of the request should contain the updated details of the appointment.",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "patientId": {
                  "example": "any"
                },
                "slotId": {
                  "example": "any"
                },
                "reason": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Appointments"
        ]
      },
      "delete": {
        "description": "This route deletes and frees up a slot for a specific appointment. Only the patient who owns the appointment can delete it.",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Appointments"
        ]
      }
    },
    "/api/appointments/cancel/{appointmentId}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Appointments"
        ]
      }
    },
    "/api/appointments": {
      "post": {
        "description": "This route creates a new appointment for a patient.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "patientId": {
                  "example": "any"
                },
                "slotId": {
                  "example": "any"
                },
                "reason": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Appointments"
        ]
      }
    },
    "/api/auth/create/company": {
      "post": {
        "description": "This route allows the creation of a new company account.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "companyAddress": {
                  "example": "any"
                },
                "createdBy": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/company/{companyId}": {
      "get": {
        "description": "This route retrieves the details of a company by its ID.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/api/drugRequests/": {
      "get": {
        "description": "This route fetches all drug request orders.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/api/drugRequest/{appointmentId}/{drugName}/{companyId}": {
      "get": {
        "description": "This route retrieves a specific drug request by appointment ID, drug name, and company ID.",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "drugName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/api/drugRequest/{appointmentId}/{drugName}": {
      "put": {
        "description": "This route updates the status of a drug request from completed back to pending.",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "drugName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/api/drugRequest/contribute/{companyId}/{appointmentId}/{drugName}": {
      "put": {
        "description": "This route updates a drug request to completed and deducts the necessary medicine from the inventory.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "drugName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "contributedQuantity": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/api/drugRequest/drugContribution": {
      "post": {
        "description": "This route adds the contributed drug request to a contribution list (drug orders).",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "appointmentId": {
                  "example": "any"
                },
                "drugName": {
                  "example": "any"
                },
                "inventoryContribution": {
                  "example": "any"
                },
                "contributionQuantity": {
                  "example": "any"
                },
                "totalCost": {
                  "example": "any"
                },
                "contributeDate": {
                  "example": "any"
                },
                "companyId": {
                  "example": "any"
                },
                "drugRecordId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/api/drugContributionOrders/{companyId}": {
      "get": {
        "description": "This route retrieves all drug orders that the company is contributing to.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/api/drugContributionOrders/{appointmentId}/{drugName}": {
      "put": {
        "description": "This route confirms that a drug order is completed.",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "drugName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Company"
        ]
      },
      "delete": {
        "description": "This route deletes a drug order from the contribution list and puts it back to the pending request list.",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "drugName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Company"
        ]
      }
    },
    "/api/drugInventoryRecord/{drugRecordId}": {
      "put": {
        "description": "This route returns the medicine contributed back to the inventory for a drug order that was canceled and put back into the pending request list.",
        "parameters": [
          {
            "name": "drugRecordId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "appointmentId": {
                  "example": "any"
                },
                "drugName": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/companyDrugInventory/": {
      "get": {
        "description": "This route retrieves a list of available drugs in the system.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/companyDrugInventory/{companyId}/{drugName}": {
      "get": {
        "description": "This route retrieves the details of a drug in the company's inventory by the drug name.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "drugName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Inventory"
        ]
      },
      "delete": {
        "description": "This route removes all available drugs remaining inside the company inventory and updates the record.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "drugName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/companyDrugInventory/addDrug": {
      "post": {
        "description": "This route adds more drug quantity into the company inventory for a selected drug.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "drugName": {
                  "example": "any"
                },
                "drugExpiryDate": {
                  "example": "any"
                },
                "drugQuantity": {
                  "example": "any"
                },
                "companyId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/companyDrugInventory/{companyId}/{drugName}/{drugQuantity}": {
      "delete": {
        "description": "This route removes a specified drug quantity based on user input from the company inventory.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "drugName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "drugQuantity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/inventoryRecord/{companyId}": {
      "get": {
        "description": "This route retrieves all available drug records (drugs added into the company's inventory logs) that belong to the company.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/inventoryRecord/{drugRecordId}": {
      "put": {
        "description": "This route removes all remaining drugs for the specified drug record.",
        "parameters": [
          {
            "name": "drugRecordId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Inventory"
        ]
      },
      "delete": {
        "description": "This route deletes the drug record from the database.",
        "parameters": [
          {
            "name": "drugRecordId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/companyDrugInventory/addDrug": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "drugName": {
                  "example": "any"
                },
                "drugExpiryDate": {
                  "example": "any"
                },
                "drugQuantity": {
                  "example": "any"
                },
                "companyId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/companyDrugInventory/{companyId}/{drugName}/{drugQuantity}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "drugName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "drugQuantity",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/inventoryRecord/{companyId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/inventoryRecord/{drugRecordId}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "drugRecordId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Inventory"
        ]
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "drugRecordId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/drugTopup/{drugName}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "drugName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "drugName": {
                  "example": "any"
                },
                "topupQuantity": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/drugInventory": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Inventory"
        ]
      }
    },
    "/api/helpRequests": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Pay-it-Forward"
        ]
      }
    },
    "/api/helpRequests/approve/{requestId}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Pay-it-Forward"
        ]
      }
    },
    "/api/helpRequests/reject/{requestId}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Pay-it-Forward"
        ]
      }
    },
    "/api/availableSlots/{date}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Appointments"
        ]
      }
    },
    "/api/availableSlot/getByDateTime": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "example": "any"
                },
                "time": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Appointments"
        ]
      }
    },
    "/api/availableSlot/doctor/{slotId}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "slotId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "doctorId": {
                  "example": "any"
                },
                "date": {
                  "example": "any"
                },
                "time": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Appointments"
        ]
      }
    },
    "/api/availableSlot": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "doctorId": {
                  "example": "any"
                },
                "slotDate": {
                  "example": "any"
                },
                "slotTimeId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Appointments"
        ]
      }
    },
    "/api/paymentRequests": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Pay-it-Forward"
        ]
      }
    },
    "/api/paymentRequests/company": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Pay-it-Forward"
        ]
      }
    },
    "/api/paymentRequest/{appointmentId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Pay-it-Forward"
        ]
      }
    },
    "/api/paymentRequest/pay": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "paymentRequestId": {
                  "example": "any"
                },
                "amount": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Pay-it-Forward"
        ]
      }
    },
    "/api/paymentRequest/check": {
      "put": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Pay-it-Forward"
        ]
      }
    },
    "/api/paymentRequest/approve/{appointmentId}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Pay-it-Forward"
        ]
      }
    },
    "/api/paymentRequest/reject/{appointmentId}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Pay-it-Forward"
        ]
      }
    },
    "/api/paymentRequest": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "appointmentId": {
                  "example": "any"
                },
                "message": {
                  "example": "any"
                },
                "createdDate": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Pay-it-Forward"
        ]
      }
    },
    "/api/paymentRequest/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Pay-it-Forward"
        ]
      }
    },
    "/api/notifications/{accountId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Notifications"
        ]
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/notification/{notificationId}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/notification": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "senderId": {
                  "example": "any"
                },
                "receiverId": {
                  "example": "any"
                },
                "message": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/generateQRCode": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "email",
            "in": "header",
            "type": "string"
          },
          {
            "name": "accountid",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "2FA"
        ]
      }
    },
    "/api/getAuth/{accountId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "2FA"
        ]
      }
    },
    "/api/verify2FA/{accountId}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "2FA"
        ]
      }
    }
  }
}